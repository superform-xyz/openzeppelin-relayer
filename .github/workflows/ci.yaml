---
name: CI
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    paths-ignore:
      - docs/**
      - '**.md'
      - .github/**
      - .gitignore
  push:
    branches:
      - main
    paths-ignore:
      - docs/**
      - '**.md'
      - .github/**
# run concurrency group for the workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  changed_files:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    name: Test changed-files
    outputs:
      changed-rust-files: ${{ steps.changed-files-yaml.outputs.code_any_changed }}
      changed-lockfile-files: ${{ steps.changed-files-yaml.outputs.lockfile_any_changed }}
      changed-docker-files: ${{ steps.changed-files-yaml.outputs.docker_any_changed }}
      changed-tests-files: ${{ steps.changed-files-yaml.outputs.tests_any_changed }}
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Get changed files
        id: changed-files-yaml
        uses: tj-actions/changed-files@115870536a85eaf050e369291c7895748ff12aea  # v46.0.4
        with:
          files_yaml: |
            code:
              - '**/*.rs'
              - 'rustfmt.toml'
              - 'rust-toolchain.toml'
            lockfile:
              - 'Cargo.lock'
              - 'Cargo.toml'
            docker:
              - 'Dockerfile.development'
              - 'Dockerfile.production'
              - 'docker-compose.yml'
              - 'Cargo.lock'
              - 'Cargo.toml'
            tests:
              - '**/*.rs'
              - tests/**/*.json
  ci:
    if: ${{ github.event.pull_request.draft == false && always() }}
    permissions:
      contents: none
    name: CI
    needs:
      - msrv
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - name: Failed
        run: exit 1
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
  msrv:
    if: ${{ github.event.pull_request.draft == false && github.event_name != 'push' && (needs.changed_files.outputs.changed-rust-files == 'true' || needs.changed_files.outputs.changed-lockfile-files == 'true') }}
    runs-on: ubuntu-latest
    needs: changed_files
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Prepare
        id: init
        uses: ./.github/actions/prepare

      # Get the output of the prepare composite action
      - name: Get cache-hit output
        run: 'echo "Cache hit >>>>>: ${{ steps.init.outputs.cache-hit }}"'
      - name: Install cargo hack
        uses: taiki-e/install-action@cargo-hack

      # Check the minimum supported Rust version
      - name: Default features
        run: cargo hack check --feature-powerset --locked --rust-version --all-targets
  rustfmt:
    if: ${{ github.event.pull_request.draft == false && github.event_name != 'push' && needs.changed_files.outputs.changed-rust-files == 'true' }}
    needs: changed_files
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Prepare
        id: init
        uses: ./.github/actions/prepare

      # Get the output of the prepare composite action
      - name: Get cache-hit output
        run: 'echo "Cache hit >>>>>: ${{ steps.init.outputs.cache-hit }}"'

      # Check the formatting of the code
      - name: Check formatting
        run: cargo fmt --all -- --check
  clippy:
    if: ${{ github.event.pull_request.draft == false && github.event_name != 'push' && needs.changed_files.outputs.changed-rust-files == 'true' }}
    needs: changed_files
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Prepare
        id: init
        uses: ./.github/actions/prepare

      # Get the output of the prepare composite action
      - name: Get cache-hit output
        run: 'echo "Cache hit >>>>>: ${{ steps.init.outputs.cache-hit }}"'
      - name: Install SARIF tools
        run: cargo install clippy-sarif --locked
      - name: Install SARIF tools
        run: cargo install sarif-fmt --locked
      - name: Check
        run: >
          cargo clippy --all-features --all-targets --message-format=json
          | clippy-sarif
          | tee clippy-results.sarif
          | sarif-fmt
        continue-on-error: true
      - name: upload sarif artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: clippy-results.sarif
          path: clippy-results.sarif
          retention-days: 1
      - name: Upload
        uses: github/codeql-action/upload-sarif@fca7ace96b7d713c7035871441bd52efbe39e27e  # v3.28.19
        with:
          sarif_file: clippy-results.sarif
          wait-for-processing: true
      - name: Report status
        run: cargo clippy --all-features --all-targets -- -D warnings --allow deprecated
  test:
    if: ${{ github.event.pull_request.draft == false && needs.changed_files.outputs.changed-tests-files == 'true' }}
    permissions:
      contents: read
    needs:
      - changed_files
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install TypeScript and ts-node
        run: |
          npm install -g typescript ts-node
          # Verify installation
          ts-node --version
          tsc --version
      - name: free disk space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt clean
          if [[ $(docker image ls -aq) ]]; then
            docker rmi $(docker image ls -aq)
          else
            echo "No Docker images found to remove"
          fi
      - name: Prepare
        id: init
        uses: ./.github/actions/prepare
        with:
          components: llvm-tools-preview

      # Get the output of the prepare composite action
      - name: Get cache-hit output
        run: 'echo "Cache hit >>>>>: ${{ steps.init.outputs.cache-hit }}"'
      - name: Install cargo hack
        uses: taiki-e/install-action@cargo-hack
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Build
        run: cargo test --no-run --locked

      # Unit tests coverage
      - name: Run Unit Tests and Generate Coverage Report
        env:
          LLVM_PROFILE_FILE: unit-%p-%m.profraw
          RUSTFLAGS: -Cinstrument-coverage
          RUST_TEST_THREADS: 1
        run: cargo hack llvm-cov --locked --lib  --ignore-filename-regex ".*/relayer_docs\.rs$" --lcov --output-path unit-lcov.info

      # Integration tests coverage
      - name: Run Integration Tests and Generate Coverage Report
        env:
          LLVM_PROFILE_FILE: integration-%p-%m.profraw
          RUSTFLAGS: -Cinstrument-coverage
          RUST_TEST_THREADS: 1
        run: cargo hack llvm-cov --locked --ignore-filename-regex ".*/relayer_docs\.rs$" --lcov --output-path integration-lcov.info --test integration

      # Properties tests coverage
      - name: Run Properties Tests
        env:
          LLVM_PROFILE_FILE: properties-%p-%m.profraw
          RUSTFLAGS: -Cinstrument-coverage
          RUST_TEST_THREADS: 1
        run: cargo hack llvm-cov --locked --ignore-filename-regex ".*/relayer_docs\.rs$" --lcov --output-path properties-lcov.info --test properties

      # Upload unit coverage
      - name: Upload Unit Coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24  # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: unit-coverage
          files: unit-lcov.info
          flags: unittests
          fail_ci_if_error: true

      # Upload integration coverage
      - name: Upload Integration Coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24  # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: integration-coverage
          files: integration-lcov.info
          flags: integration
          fail_ci_if_error: true

      # Upload properties coverage
      - name: Upload Properties Coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24  # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: properties-coverage
          files: properties-lcov.info
          flags: properties
          fail_ci_if_error: true
  docker-scan:
    runs-on: ubuntu-latest
    needs:
      - changed_files
      - ci
    if: |
      ${{ github.event.pull_request.draft == false && needs.changed_files.outputs.changed-docker-files == 'true' }}
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2  # v3.10.0
      - name: Build local container
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          tags: openzeppelin-relayer-dev:${{ github.sha }}
          push: false
          load: true
          file: Dockerfile.development
          platforms: linux/amd64
      - name: Scan image
        uses: anchore/scan-action@2c901ab7378897c01b8efaa2d0c9bf519cc64b9e  # v6.2.0
        with:
          image: openzeppelin-relayer-dev:${{ github.sha }}
          fail-build: true
          severity-cutoff: high
          output-format: table
