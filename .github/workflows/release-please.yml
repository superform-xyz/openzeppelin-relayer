---
name: Run release-please
on:
  push:
    branches:
      - release-v*
permissions:
  actions: read
  contents: write
  pull-requests: write
  attestations: write
  packages: write
  id-token: write
jobs:
  release-please:
    runs-on: ubuntu-latest
    environment: release
    outputs:
      release_created: ${{ steps.release.outputs.releases_created }}
      pr_created: ${{ steps.release.outputs.prs_created }}
      release_branch: ${{ steps.get_release_branch.outputs.release_branch }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag_name }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SLACK_CHANNEL: '#oss-releases'
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911  # v2.13.0
        with:
          egress-policy: audit
      - name: Get github app token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e  # v2.0.6
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Slack notification
        uses: act10ns/slack@44541246747a30eb3102d87f7a4cc5471b0ffb7d  # v2.1.0
        with:
          status: starting
          steps: ${{ toJson(steps) }}
          channel: ${{ env.SLACK_CHANNEL }}
          message: Starting release please workflow for ${{ github.repository }}
        if: always()
      - name: Checkout release branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0
          token: ${{ steps.gh-app-token.outputs.token }}
      - name: Get merged PR number from commit
        id: get_pr
        run: |
          commit_sha="${{ github.sha }}"
          pr_number=$(gh pr list --search "${commit_sha}" --state merged --json number | jq '.[0].number // empty')
          echo "pr_number_output=${pr_number:-}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.gh-app-token.outputs.token }}
      - name: Check for label and unlock conversation
        if: steps.get_pr.outputs.pr_number_output != ''
        run: |
          PR_NUMBER=${{ steps.get_pr.outputs.pr_number_output }}
          echo "Found merged PR number: $PR_NUMBER"
          retries=3
          wait=2
          while [[ $retries -gt 0 ]]; do
            # Fetch PR details and extract labels
            PR_LABELS=$(gh api --jq '.labels.[].name' /repos/${{ github.repository }}/pulls/$PR_NUMBER)
            if echo "$PR_LABELS" | grep -q "autorelease: pending"; then
              echo "Label 'autorelease: pending' found. Attempting to unlock..."
              gh pr unlock $PR_NUMBER
              if [[ $? -eq 0 ]]; then
                echo "PR unlocked successfully."
                break
              else
                echo "Failed to unlock PR. Retrying in $wait seconds..."
                sleep $wait
                wait=$((wait * 2))
                retries=$((retries - 1))
              fi
            else
              echo "Label 'autorelease: pending' not found. Skipping unlock."
              break
            fi
          done
          if [[ $retries -eq 0 ]]; then
            echo "Failed to unlock PR after multiple retries."
            exit 1  # Fail the step if unlocking consistently fails
          fi
        env:
          GH_TOKEN: ${{ steps.gh-app-token.outputs.token }}
      - name: Start release please action
        id: release
        uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445  # v4.2.0
        with:
          token: ${{ steps.gh-app-token.outputs.token }}
          target-branch: ${{ github.ref_name }}
          config-file: .github/release-please/.config.json
          manifest-file: .github/release-please/manifest.json
      - name: Get release branch name on release please prs
        if: ${{ steps.release.outputs.releases_created == 'false' && steps.release.outputs.pr != '' }}
        id: get_release_branch
        run: |
          echo "release_branch=${{ fromJSON(steps.release.outputs.pr).headBranchName }}" >> $GITHUB_OUTPUT
      - name: Slack notification success or failure
        uses: act10ns/slack@44541246747a30eb3102d87f7a4cc5471b0ffb7d  # v2.1.0
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: ${{ env.SLACK_CHANNEL }}
          message: Release please flow ${{ job.status }}
        if: always()

  # Cargo lock update
  update-cargo-lockfile-antora-version:
    name: Update Cargo.lock and Antora version
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'false' &&  needs.release-please.outputs.pr_created == 'true' }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911  # v2.13.0
        with:
          egress-policy: audit
      - name: Get github app token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e  # v2.0.6
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Get PR details
        id: release-branch
        run: |
          echo "pr head branch name: >>>>> ${{ needs.release-please.outputs.release_branch }}"
      - name: Checkout release branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 2
          token: ${{ steps.gh-app-token.outputs.token }}
          ref: ${{ needs.release-please.outputs.release_branch }}
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.gh-app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.gh-app-token.outputs.token }}
      - name: Prepare
        id: init
        uses: ./.github/actions/prepare
      - name: Cargo Update
        id: lock-file-commit
        run: |-
          cargo update
          git add Cargo.lock
          if ! git diff --cached --quiet Cargo.lock; then
            echo "cargo_changed=true" >> $GITHUB_OUTPUT
          else
            echo "cargo_changed=false" >> $GITHUB_OUTPUT
          fi
      - name: Update Antora version
        id: update-antora
        run: |-
          MANIFEST=".github/release-please/manifest.json"
          ANTORA="docs/antora.yml"
          RAW_VERSION=$(jq -r '.["."]' "$MANIFEST")
          NEW_VERSION=${RAW_VERSION%.*}.x
          echo "Bumping Antora version to $NEW_VERSION in $ANTORA"
          sed -i -E "s/^version:.*/version: $NEW_VERSION/" "$ANTORA"
          git add "$ANTORA"
          if ! git diff --cached --quiet "$ANTORA"; then
            echo "antora_changed=true" >> $GITHUB_OUTPUT
          else
            echo "antora_changed=false" >> $GITHUB_OUTPUT
          fi
      - name: Commit cargo update
        if: ${{ steps.lock-file-commit.outputs.cargo_changed == 'true' || steps.update-antora.outputs.antora_changed == 'true' }}
        uses: iarekylew00t/verified-bot-commit@cc09d455be3e20eb6b1c3d1c30a5221f9475aa10  # v1.5.1
        with:
          message: 'chore: Updating lock file and bumping version in antora file'
          token: ${{ steps.gh-app-token.outputs.token }}
          ref: ${{ needs.release-please.outputs.release_branch }}
          files: |-
            Cargo.lock
            docs/antora.yml

  # Update rust docs link in nav.adoc
  update-rust-docs-link:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'false' }}
    uses: ./.github/workflows/rust-docs-url.yml
    with:
      branch: ${{ github.ref_name }}
    secrets: inherit

  # Trigger workflow to generate sbom
  release-sbom:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    uses: ./.github/workflows/release-sbom.yml
    with:
      tag: ${{ needs.release-please.outputs.tag }}
    secrets: inherit

  # Trigger workflow to publish docker images
  release-docker:
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    needs: release-please
    uses: ./.github/workflows/release-docker.yml
    with:
      tag: ${{ needs.release-please.outputs.tag }}
    secrets: inherit

  # Trigger workflow to publish docs
  release-docs:
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    needs:
      - release-please
      - release-docker
    uses: ./.github/workflows/release-docs.yml
    with:
      tag: ${{ needs.release-please.outputs.tag }}
    secrets: inherit
